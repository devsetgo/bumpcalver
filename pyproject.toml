[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[project]
name = "bumpcalver"
version = "0.1.0"
requires-python = ">=3.10"
description = """
A CLI tool for calendar-based version bumping
"""
keywords = ["python", "library", "calendar versioning", "calver", "versioning", "cli"]
readme = "README.md"
authors = [{ name = "Your Name", email = "you@example.com" }]
# If you have maintainers, you can add them here
# maintainers = [
#     { name = "Maintainer Name", email = "maintainer@example.com" },
# ]
license = { file = "LICENSE" }
classifiers = [
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Operating System :: POSIX :: Linux",
    "Operating System :: MacOS :: MacOS X",
    "Operating System :: Microsoft :: Windows",
]

dependencies = [
    "click>=8.0",
    "toml>=0.10.2",
]

[project.urls]
Homepage = "https://github.com/yourusername/bumpcalver"
Documentation = "https://yourusername.github.io/bumpcalver/"
Repository = "https://github.com/yourusername/bumpcalver"

[project.scripts]
bumpcalver = "bumpcalver.cli:main"

[tool.hatch.build.targets.sdist]
include = [
  "/bumpcalver",
  # "/tests",  # Uncomment if you want to include tests
]
exclude = [
  "*.json",
  "pkg/_compat.py",
]

[tool.hatch.build.targets.wheel]
packages = ["bumpcalver"]

[tool.bumpcalver]
version_format = "{current_date}-{build_count:03}"
files = [
    "src/__init__.py",
    "Makefile"
]

[tool.ruff]
line-length = 100
indent-width = 4
unsafe-fixes = true
target-version = "py312"
src = ["bumpcalver", "tests"]
exclude = ["unreleased/*", "scripts/*", "coverage.xml", "coverage-badge.svg"]

[tool.ruff.lint]
select = [
    "C",  # mccabe rules
    "F",  # pyflakes rules
    "E",  # pycodestyle error rules
    "W",  # pycodestyle warning rules
    "B",  # flake8-bugbear rules
]
ignore = [
    "C901",  # max-complexity-10
    "E501",  # line-too-long
    "B017",
    "B904",
    "B008",
    "I",  # isort rules
]

[tool.ruff.format]
indent-style = "space"
quote-style = "single"

[tool.flake8]
max-line-length = 100
max-doc-length = 100
ignore = ["E302", "E501", "E303"]
exclude = [
    ".git",
    "__pycache__",
    "docs",
    "build",
    "tests",
    "_venv",
    "htmlcov",
    "scripts",
    ".pytest_cache",
    ".vscode",
    "dist",
    "*.egg-info",
]

[tool.isort]
src_paths = ["bumpcalver", "tests"]
force_single_line = false
multi_line_output = 3
include_trailing_comma = true
force_grid_wrap = 0
use_parentheses = true
line_length = 100

[tool.coverage.run]
source = ["bumpcalver"]
omit = ["setup.py", "_venv/*", "tests/*", "examples/*"]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "if __name__",
    "def main",
    "import_sqlalchemy",
]

[tool.pytest.ini_options]
norecursedirs = ["/tests"]
testpaths = ["tests"]
python_files = ["test_*.py", "*_test.py"]
addopts = [
    "--cov=./",
    "--cov-report=html",
    "--cov-report=xml",
    "-ra",
    "--strict-markers",
    "--tb=short",
    "-p", "pytester",
]
